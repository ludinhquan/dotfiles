# unbind C-b as prefix (do not use it)
unbind C-b

set-option -g prefix C-a
# Double pressed tmux prefix key sends
# commands to the inner tmux session
bind C-a send-prefix

# Setting a quick way to reload config
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded"

# Allowing mouse control, ditching status-bar
set -g mouse on
set -s escape-time 0
set -g status on
set -g default-terminal "screen-256color"
set-window-option -g mode-keys vi
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Counting panes and windows from 1, rather than 0
set -g base-index 1
setw -g pane-base-index 1

# Vim keys for navigating panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize current pane:
# A little bit
bind-key -n C-M-j resize-pane -D 3 
bind-key -n C-M-k resize-pane -U 3 
bind-key -n C-M-h resize-pane -L 3 
bind-key -n C-M-l resize-pane -R 3 

# go to prev/next window
bind-key -n M-k next-window
bind-key -n M-j previous-window

bind - split-window -v -c "#{pane_current_path}"
# on split window vertically
bind '\' split-window -h -c "#{pane_current_path}"
#bind \\ split-window -h -c "#{pane_current_path}"

# on split window horizontally
#bind - split-window -v -c "#{pane_current_path}"

bind-key \; select-window -l
bind-key a copy-mode

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# rename current tmux window
bind e command-prompt 'rename-window %%'

# Create new window
bind n command-prompt 'new-window -n %%'
bind d command-prompt 'new-window -n dotfiles -c ~/dotfiles nvim'

# Select window by its number or name
bind p command-prompt 'select-window -t %%'

# Start window indexing at one instead of zero
set -g base-index 1

# config vi mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

#Select last window

########################
# ***    DISPLAY   *** #
########################

# Set tmux to display in 256 colors
set -g default-terminal    "screen-256color"

# Set status line message style
set -g message-style "fg=colour5,bg=default"

##############
### DESIGN ###
##############

## Status bar design
# status line
set -g status-justify left
#set -g status-bg default
set -g status-style fg=blue
set -g status-interval 2

# messaging
set -g message-command-style fg=blue,bg=black

# window mode
setw -g mode-style bg=green,fg=black

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=white] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=white] #I #[fg=white]#[bg=cyan] #W "
setw -g window-status-current-style bg=black,fg=yellow,dim
setw -g window-status-style bg=green,fg=black,reverse

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set-window-option -g monitor-activity off
set -g bell-action none
set-option -g history-limit 10000000

# The modes 
set-window-option -g clock-mode-colour red
set-window-option -g mode-style fg=red,bg=black,bold

# border colours
# set -g pane-border-style "bg=#8dc0d5 fg=#8dc0d5"
set -g pane-border-style ""
set -g pane-active-border-style ""
# The statusbar 
set -g status-position bottom
set -g status-style bg=black,fg=yellow,dim
set -g status-left ''
set -g status-right '#{?client_prefix,#[fg=red]prefix pressed ..,#[fg=brightwhite]#H}'

set -g status-right-length 50
set -g status-left-length 20

# The window
set-window-option -g window-status-current-style fg=red,bg=brightblack,bold
set-window-option -g window-status-current-format ' #I#[fg=brightwhite]:#[fg=brightwhite]#W#[fg=blue]#F '

set-window-option -g window-status-style fg=magenta,bg=black,none
set-window-option -g window-status-format ' #I#[fg=colour251]:#[fg=colour251]#W#[fg=black]#F '

set-window-option -g window-status-bell-style fg=white,bg=red,bold

# The messages 
set -g message-style fg=white,bg=red,bold

